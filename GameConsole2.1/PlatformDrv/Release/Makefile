################################################################################
# Automatically-generated file. Do not edit!
################################################################################

SHELL := cmd.exe
RM := rm -rf

USER_OBJS :=

LIBS := 
PROJ := 

O_SRCS := 
C_SRCS := 
S_SRCS := 
S_UPPER_SRCS := 
OBJ_SRCS := 
ASM_SRCS := 
PREPROCESSING_SRCS := 
OBJS := 
OBJS_AS_ARGS := 
C_DEPS := 
C_DEPS_AS_ARGS := 
EXECUTABLES := 
OUTPUT_FILE_PATH :=
OUTPUT_FILE_PATH_AS_ARGS :=
AVR_APP_PATH :=$$$AVR_APP_PATH$$$
QUOTE := "
ADDITIONAL_DEPENDENCIES:=
OUTPUT_FILE_DEP:=
LIB_DEP:=
LINKER_SCRIPT_DEP:=

# Every subdirectory with source files must be described here
SUBDIRS :=  \
../LCD \
../scmRTOS \
../scmRTOS/AVR \
../scmRTOS/Common \
../scmRTOS/Extensions \
../scmRTOS/Extensions/Profiler


# Add inputs and outputs from these tool invocations to the build variables 
C_SRCS +=  \
../LCD/font6x8.cpp \
../LCD/font8x14.cpp \
../LCD/fonts.cpp \
../LCD/LcdDrv.cpp \
../PlatformDrv.cpp \
../scmRTOS/AVR/OS_Target_cpp.cpp \
../scmRTOS/Common/OS_Kernel.cpp \
../scmRTOS/Common/OS_Services.cpp \
../scmRTOS/Common/usrlib.cpp


PREPROCESSING_SRCS +=  \
../scmRTOS/AVR/OS_Target_asm.S


ASM_SRCS += 


OBJS +=  \
LCD/font6x8.o \
LCD/font8x14.o \
LCD/fonts.o \
LCD/LcdDrv.o \
PlatformDrv.o \
scmRTOS/AVR/OS_Target_asm.o \
scmRTOS/AVR/OS_Target_cpp.o \
scmRTOS/Common/OS_Kernel.o \
scmRTOS/Common/OS_Services.o \
scmRTOS/Common/usrlib.o

OBJS_AS_ARGS +=  \
LCD/font6x8.o \
LCD/font8x14.o \
LCD/fonts.o \
LCD/LcdDrv.o \
PlatformDrv.o \
scmRTOS/AVR/OS_Target_asm.o \
scmRTOS/AVR/OS_Target_cpp.o \
scmRTOS/Common/OS_Kernel.o \
scmRTOS/Common/OS_Services.o \
scmRTOS/Common/usrlib.o

C_DEPS +=  \
LCD/font6x8.d \
LCD/font8x14.d \
LCD/fonts.d \
LCD/LcdDrv.d \
PlatformDrv.d \
scmRTOS/AVR/OS_Target_asm.d \
scmRTOS/AVR/OS_Target_cpp.d \
scmRTOS/Common/OS_Kernel.d \
scmRTOS/Common/OS_Services.d \
scmRTOS/Common/usrlib.d

C_DEPS_AS_ARGS +=  \
LCD/font6x8.d \
LCD/font8x14.d \
LCD/fonts.d \
LCD/LcdDrv.d \
PlatformDrv.d \
scmRTOS/AVR/OS_Target_asm.d \
scmRTOS/AVR/OS_Target_cpp.d \
scmRTOS/Common/OS_Kernel.d \
scmRTOS/Common/OS_Services.d \
scmRTOS/Common/usrlib.d

OUTPUT_FILE_PATH +=libPlatformDrv.a

OUTPUT_FILE_PATH_AS_ARGS +=libPlatformDrv.a

ADDITIONAL_DEPENDENCIES:=

OUTPUT_FILE_DEP:= ./makedep.mk

LIB_DEP+= 

LINKER_SCRIPT_DEP+= 


# AVR32/GNU C Compiler



















LCD/%.o: ../LCD/%.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DNDEBUG -DF_CPU=16000000UL  -I"../scmRTOS/Common" -I"../scmRTOS/AVR"  -Os -ffunction-sections -fdata-sections -fshort-enums -Wall -mmcu=atmega32 -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

./%.o: .././%.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DNDEBUG -DF_CPU=16000000UL  -I"../scmRTOS/Common" -I"../scmRTOS/AVR"  -Os -ffunction-sections -fdata-sections -fshort-enums -Wall -mmcu=atmega32 -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

scmRTOS/AVR/%.o: ../scmRTOS/AVR/%.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DNDEBUG -DF_CPU=16000000UL  -I"../scmRTOS/Common" -I"../scmRTOS/AVR"  -Os -ffunction-sections -fdata-sections -fshort-enums -Wall -mmcu=atmega32 -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	

scmRTOS/Common/%.o: ../scmRTOS/Common/%.cpp
	@echo Building file: $<
	@echo Invoking: AVR8/GNU C Compiler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -funsigned-char -funsigned-bitfields -DNDEBUG -DF_CPU=16000000UL  -I"../scmRTOS/Common" -I"../scmRTOS/AVR"  -Os -ffunction-sections -fdata-sections -fshort-enums -Wall -mmcu=atmega32 -c -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	



# AVR32/GNU Preprocessing Assembler



# AVR32/GNU Assembler
scmRTOS/AVR/OS_Target_asm.o: ../scmRTOS/AVR/OS_Target_asm.S
	@echo Building file: $<
	@echo Invoking: AVR8/GNU Assembler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -Wa,-gdwarf2 -x assembler-with-cpp -c -mmcu=atmega32 -I "../scmRTOS/Common" -I "../scmRTOS/AVR"  -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	


scmRTOS/AVR/%.o: ../scmRTOS/AVR/%.S
	@echo Building file: $<
	@echo Invoking: AVR8/GNU Assembler : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-g++.exe$(QUOTE) -Wa,-gdwarf2 -x assembler-with-cpp -c -mmcu=atmega32 -I "../scmRTOS/Common" -I "../scmRTOS/AVR"  -MD -MP -MF "$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -MT"$(@:%.o=%.o)"   -o "$@" "$<" 
	@echo Finished building: $<
	




ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

# Add inputs and outputs from these tool invocations to the build variables 

# All Target
all: $(OUTPUT_FILE_PATH) $(ADDITIONAL_DEPENDENCIES)


$(OUTPUT_FILE_PATH): $(OBJS) $(USER_OBJS) $(OUTPUT_FILE_DEP)
	@echo Building target: $@
	@echo Invoking: AVR8/GNU Archiver : 4.8.1
	$(QUOTE)C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR8 GCC\Native\3.4.1061\avr8-gnu-toolchain\bin\avr-ar.exe$(QUOTE) -r  -o$(OUTPUT_FILE_PATH_AS_ARGS) $(OBJS_AS_ARGS) $(USER_OBJS) $(LIBS) 
	@echo Finished building target: $@
	
	




# Other Targets
clean:
	-$(RM) $(OBJS_AS_ARGS) $(EXECUTABLES)  
	-$(RM) $(C_DEPS_AS_ARGS)   
	rm -rf "libPlatformDrv.elf" "libPlatformDrv.a" "libPlatformDrv.hex" "libPlatformDrv.lss" "libPlatformDrv.eep" "libPlatformDrv.map" "libPlatformDrv.srec" "libPlatformDrv.usersignatures"
	